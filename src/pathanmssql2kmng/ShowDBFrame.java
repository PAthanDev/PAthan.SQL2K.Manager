/*
 * ShowDBFrame.java
 *
 * Created on 2 Сентябрь 2008 г., 10:44
 */

package pathanmssql2kmng;


import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.tree.*;
import javax.swing.event.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;


import java.sql.*;                  // JDBC package
import javax.sql.*;                 // extended JDBC package
import com.microsoft.sqlserver.jdbc.*;
//import com.inet.tds.*;
//import com.inet.pool.*;
/**
 *
 * @author  uas
 */
public class ShowDBFrame extends javax.swing.JInternalFrame {

    
    /** Creates new form ShowDBFrame */
    public ShowDBFrame(JFrame frame) {
        initComponents();
        jframe=(MainWnd) frame;
        setLocation((jframe.screenSize.width-getWidth()-600) , (50) );        
               
        jMnuTreeView.setText("\u041e\u0442\u043a\u0440\u044b\u0442\u044c");
        jMenu1.setText("\u0411\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445");
        jMenu1.setEnabled(false);
        jMnuBackUp.setText("\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c");
        jMnuRestore.setText("\u0412\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c");

        jMnuTreeView.addActionListener(new ActionListener(){
          public void actionPerformed(ActionEvent ae){
            try{
              if(jframe.SQLConnect.isClosed())
                jframe.SQLConnect= DriverManager.getConnection("jdbc:sqlserver://"+jframe.urlConnectFull+":1433;Databasename=master",jframe.login,jframe.password);
            }catch(Exception e){
              JOptionPane.showMessageDialog(null, " " + e, "Error", JOptionPane.ERROR_MESSAGE);              
            }             
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTreeDB.getLastSelectedPathComponent(); 
            Object[] treepath= node.getUserObjectPath();
           try{
            jframe.SQLConnect.setCatalog(treepath[1].toString());
            Statement st3 = jframe.SQLConnect.createStatement();
            ResultSet rs1 = st3.executeQuery("select * from "+treepath[1].toString()+".dbo."+(String)node.getUserObject());

            if(rs1.getMetaData().getColumnCount()>=0){
              String[] headers=new String[rs1.getMetaData().getColumnCount()];
              //Vector DataTables= new Vector();
              ArrayList Datatables=new ArrayList();
              for(int j=1; j<=rs1.getMetaData().getColumnCount(); j++){
                      headers[j-1]= rs1.getMetaData().getColumnName(j);
              }
           
           while (rs1.next()){
             String[] columns= new String[rs1.getMetaData().getColumnCount()];
           
                for(int j=1; j<=rs1.getMetaData().getColumnCount(); j++){
                    columns[j-1]= rs1.getString(j);
                }
                Datatables.add(columns);
           }

           Tableswnd tableswnd= new Tableswnd(Datatables, headers);
           tableswnd.setTitle(treepath[1].toString()+" "+rs1.getMetaData().getTableName(1)); 
           jframe.mainwnddesktop.add(tableswnd);
           tableswnd.setTitle(treepath[1].toString()+".dbo."+(String)node.getUserObject());
           tableswnd.setVisible(true);
         }
         
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, " " + e, "Not View the Tables", JOptionPane.ERROR_MESSAGE);          
        }              
          }  
        });
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPpMenuTree = new javax.swing.JPopupMenu();
        jMnuObjName = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMnuTreeView = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        jMenu1 = new javax.swing.JMenu();
        jMnuBackUp = new javax.swing.JMenuItem();
        jMnuRestore = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTreeDB = new javax.swing.JTree();

        jPpMenuTree.setMaximumSize(new java.awt.Dimension(32000, 32000));
        jPpMenuTree.setMinimumSize(new java.awt.Dimension(20, 20));
        jPpMenuTree.getAccessibleContext().setAccessibleParent(jTreeDB);
        jMnuObjName.setText("Item");
        jMnuObjName.setEnabled(false);
        jPpMenuTree.add(jMnuObjName);

        jPpMenuTree.add(jSeparator1);

        jMnuTreeView.setText("View");
        jPpMenuTree.add(jMnuTreeView);

        jPpMenuTree.add(jSeparator2);

        jMenu1.setText("Menu");
        jMnuBackUp.setText("Item");
        jMnuBackUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMnuBackUpActionPerformed(evt);
            }
        });

        jMenu1.add(jMnuBackUp);

        jMnuRestore.setText("Item");
        jMnuRestore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMnuRestoreActionPerformed(evt);
            }
        });

        jMenu1.add(jMnuRestore);

        jPpMenuTree.add(jMenu1);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jTreeDB.setComponentPopupMenu(jPpMenuTree);
        jTreeDB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTreeDBMouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTreeDB);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
// TODO add your handling code here:
       try{
        jframe.SQLConnect.close();
        }catch(Exception e){
          JOptionPane.showMessageDialog(null, " " + e, "Connection Closed Failure", JOptionPane.ERROR_MESSAGE);            
        }
        
        jframe.SQLConnect = null;
        jframe.conMD = null;
        jframe.statement = null;
        
    }//GEN-LAST:event_formInternalFrameClosed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
// TODO add your handling code here:
       try{
        jframe.SQLConnect.close();
        }catch(Exception e){
          JOptionPane.showMessageDialog(null, " " + e, "Connection Closed Failure", JOptionPane.ERROR_MESSAGE);            
        }
        
        jframe.SQLConnect = null;
        jframe.conMD = null;
        jframe.statement = null;

    }//GEN-LAST:event_formInternalFrameClosing

    private void jMnuRestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMnuRestoreActionPerformed
// TODO add your handling code here:
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTreeDB.getLastSelectedPathComponent();
        
        BacResWnd bacwnd=new BacResWnd(jframe, false, (String)node.getUserObject());
        jframe.mainwnddesktop.add(bacwnd);
        bacwnd.setVisible(true);
        
    }//GEN-LAST:event_jMnuRestoreActionPerformed

    private void jMnuBackUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMnuBackUpActionPerformed
// TODO add your handling code here:
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTreeDB.getLastSelectedPathComponent();
        
        BacResWnd bacwnd=new BacResWnd(jframe, true, (String)node.getUserObject());
        jframe.mainwnddesktop.add(bacwnd);
        bacwnd.setVisible(true);
    }//GEN-LAST:event_jMnuBackUpActionPerformed

    private void jTreeDBMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTreeDBMouseReleased
    // TODO add your handling code here:
    }//GEN-LAST:event_jTreeDBMouseReleased

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
    // TODO add your handling code here:
            try{
              if(jframe.SQLConnect.isClosed()||jframe.SQLConnect==null)
                jframe.SQLConnect= DriverManager.getConnection("jdbc:sqlserver://"+jframe.urlConnectFull+":1433;Databasename=master",jframe.login,jframe.password);
            }catch(Exception e){
              JOptionPane.showMessageDialog(null, " " + e, "Error", JOptionPane.ERROR_MESSAGE);              
            }        
        if(jframe.SQLConnect!=null){
          try{
          //select a database
          jframe.SQLConnect.setCatalog( "master" );  
          //create a statement
	  Statement st1 = jframe.SQLConnect.createStatement();
          Statement st2 = jframe.SQLConnect.createStatement();
          //execute a query
	  ResultSet rs = st1.executeQuery("SELECT name FROM dbo.sysdatabases");

          // read the data and put it to the console

          jframe.NameDatabase= new Vector();
          DefaultMutableTreeNode root = new DefaultMutableTreeNode("["+jframe.ServerName+"]");
          DefaultMutableTreeNode child[]= new DefaultMutableTreeNode[rs.getMetaData().getColumnCount()];
          while (rs.next()){
              for(int j=1; j<=rs.getMetaData().getColumnCount(); j++){
                //System.out.print( rs.getObject(j)+"\t");
                jframe.NameDatabase.addElement(new String(rs.getString(j)));
                child[j-1] = new DefaultMutableTreeNode(rs.getString(j));
                root.add(child[j-1]);
                
                jframe.SQLConnect.setCatalog(rs.getString(j));
                ResultSet rsusertable = st2.executeQuery("SELECT name FROM dbo.sysobjects where xtype='U' or xtype='S'");
                DefaultMutableTreeNode userTab[]= new DefaultMutableTreeNode[rsusertable.getMetaData().getColumnCount()];
                    while(rsusertable.next()){
                      for(int in=1; in<=rsusertable.getMetaData().getColumnCount(); in++){
                          userTab[in-1]= new DefaultMutableTreeNode(rsusertable.getString(in));
                          child[j-1].add(userTab[in-1]);
                      }
                    }

	    }
	    System.out.println();
	  }
          jTreeDB= new JTree(root);
          jTreeDB.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
          jTreeDB.addTreeSelectionListener(new TreeSelectionListener(){
              public void valueChanged(TreeSelectionEvent e) { 
               DefaultMutableTreeNode node = (DefaultMutableTreeNode) jTreeDB.getLastSelectedPathComponent(); 
                if (node == null) 
                    return; 
                jMnuObjName.setText((String)node.getUserObject());
                Object[] treepath= node.getUserObjectPath();                
                if(treepath.length<=2){
                    jMenu1.setEnabled(true);
                    jMnuTreeView.setEnabled(false);
                }else{
                    jMenu1.setEnabled(false);
                    jMnuTreeView.setEnabled(true);
                }
              }
          }  );
          jTreeDB.setComponentPopupMenu(jPpMenuTree);
          jTreeDB.addMouseListener(new MouseAdapter(){
               public final void mousePressed(MouseEvent e){
                 JTree tree = (JTree) e.getSource();
                 tree.setSelectionRow(tree.getRowForLocation(e.getX(), e.getY()));
               }; 
          });
          //jTreeDB.setCellRenderer(renderer);

          //jTreeDB.setEditable(true);
          jScrollPane1.setViewportView(jTreeDB);
          setTitle("Tree DataBase. ["+jframe.ServerName+"]. Only User Tables");
          repaint();
          jTreeDB.repaint();
          //close the objects
	  st1.close();
          st2.close();
          }catch(Exception e){
            JOptionPane.showMessageDialog(null, " " + e, "Visible DataBase Failure", JOptionPane.ERROR_MESSAGE);          
          }
        }
    }//GEN-LAST:event_formInternalFrameOpened
    
 
    
    private MainWnd jframe=null;
    protected DefaultTreeModel m_model;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMnuBackUp;
    private javax.swing.JMenuItem jMnuObjName;
    private javax.swing.JMenuItem jMnuRestore;
    private javax.swing.JMenuItem jMnuTreeView;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPpMenuTree;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    public javax.swing.JTree jTreeDB;
    // End of variables declaration//GEN-END:variables
    
}
